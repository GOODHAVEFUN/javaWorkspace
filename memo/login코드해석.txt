package Ex03;

import java.util.ArrayList;
import java.util.List;

public class User {

   private String name; //접근제한된 문자열 타입에 name
   private String password; //접근제한된 문자열 타입에 password
   

   public User(String name, String password) { //오브젝트 필드에 User  name password
      super();			
      this.name = name;		
      this.password = password;	
   }

   public String getName() { //name 을 반환하는 게터
      return name;
   }

   public String getPassword() { //password를 반환하는 게터
      return password;
   }
}

class UserManager{	//내부클래스 UserManager 선언
   private List<User> users;	//제한된 리스트(User타입) users선언
   private User loginUser;	//제한된 User? loginUser	
   
   
   public UserManager() { 공개된 UserManager()
      users = new ArrayList<>();	//users 에 생성 ArrayList<User>();
      loginUser = null;	//loginUser 는 비워둠
   }
   

   public void registerUser(String name, String password) {	//공개된 반환타입없는 registerUser(받고 저장할주소name, 받고 저장할주소 password) 
      for(User user : users) {	//foreach문 User타입에 user : users
         if(user.getName().equals(name)) {	//만약user안에 loginUser.name이 users.name이 같다면
//            System.out.println("존재하는 사용자입니다");
//            return;	반환값없음
            throw new IllegalArgumentException("존재하는 사용자입니다"); //예외던지기 생성 IllegalArgumentException?
         }
      }
      
      User user = new User(name, password); //User타입에 user(name,password)생성
      users.add(user);		//users에 user(name,password)추가
      System.out.println("사용자가 등록되었습니다");
   }
   

   public void login(String name, String password) { //공개된 반환값없는 login(받고 저장할주소name, 받고 저장할주소 password)
      if(loginUser != null) {	//만약 loginUser 가 비어있지 않다면 
//         System.out.println("이미 로그인되어있습니다");
//         return;
         throw new IllegalStateException("이미 로그인되어있습니다");	//잘못된 인자를 메소드에 넘겨줬을때 예외던기기를 생성
      }
      
      for(User user : users) {// for eash문 User
         if(user.getName().equals(name)) { //만약(user에서 받아온name값이 users.name과 같다면
            if(user.getPassword().equals(password)) { //만약(user에서 받아온 password값이 users.password과 같다면
               loginUser = user; loginUser(name,password) 에 user(name,password)대입
               System.out.println("로그인되었습니다");
               return;	//반환값없이 종료
            }else {	//만약(user에서 받아온 password값이 users.password과 같지않다면
//               System.out.println("비밀번호가 일치하지 않습니다"); 
//               return;	//반환값없이 종료
               throw new IllegalArgumentException("비밀번호가 일치하지 않습니다");	//잘못된 인자를 메소드에 넘겨줬을때 예외던기기를 생성
         }
//         System.out.println("사용자 존재하지 않습니다");
         throw new IllegalArgumentException("사용자가 존재하지 않습니다");	//잘못된 인자를 메소드에 넘겨줬을때 예외던기기를 생성
      }
   }
   

   public void logout() {
      if(loginUser == null) {	//만약 loginUser에 목록이 비어있다면 
//         System.out.println("로그인된 사용자가 없습니다");
         throw new IllegalStateException("로그인된 사용자가 없습니다");		//예외던지기 생성 IllegalStateException 값을 처리하였지만
      }else {	//비워있지 않다면 
         loginUser = null;	// loginUser안 값을 비우기
         System.out.println("로그아웃 되었습니다");
      }
   }
   
   public void updateUser(String newPassword) {	//공개된 반환값없는 updateUser메서드 생성
      if(loginUser == null) {	//만약 loginUser에 목록이 비어있다면 
//         System.out.println("로그인된 사용자가 없습니다");
         throw new IllegalStateException("로그인된 사용자가 없습니다");	//예외던지기 생성 IllegalStateException
      }else {	// loginUser에 목록이 비어있지않다면
         loginUser = new User(loginUser.getName(), newPassword); //loginUser안 목록에 생성 User타입(loginUser에 name값, updateUser에newPassword) 대입
         System.out.println("프로필이 업데이트 되었습니다");
      }
   }
}





package Ex03;

import java.util.InputMismatchException;
import java.util.Scanner;

public class Main {	//공개된 class Main생성
   public static void main(String[] args) {	//main메서드 생성
      UserManager userManager = new UserManager(); //UserManager타입에 userManager메서드 생성 
      Scanner sc = new Scanner(System.in); 
      
      while(true) { //반복문
      try { //try catch 문 
         System.out.println("1. 사용자 등록");
         System.out.println("2. 사용자 로그인");
         System.out.println("3. 사용자 로그아웃");
         System.out.println("4. 프로필 수정");
         System.out.println("5. 종료");
         System.out.println("번호 입력 : ");
         

//         String choiceInput = sc.nextLine(); //문자열 타입 변수 생성및 nextLine()형식으로 입력받아 대입
//         int choice = Integer.parseInt(choiceInput); //정수타입에 choice 에 문자열 타입 choiceInput을 정수화 하여 대입
         int choice = sc.nextInt(); //정수를 입력받는 정수형choice 변수 생성
         sc.nextLine(); //
         
         switch(choice) { //choice변수에 저장된 값에따라 case문이 실행
         case 1: 
            System.out.println("이름입력 : ");
            String name = sc.nextLine(); 	//name 변수에 입력값 전달
            System.out.println("비밀번호입력 : ");
            String password = sc.nextLine();	//password 변수에 입력값 전달
            userManager.registerUser(name, password);	// userManager에registerUser메서드에 name, password변수를 전닳
            break; //case 1 종료
         case 2:
            System.out.println("이름입력 : ");
            String loginname = sc.nextLine();	//loginname 변수에 입력값 전달
            System.out.println("비밀번호입력 : ");
            String loginpassword = sc.nextLine();	//loginpassword 변수에 입력값 전달
            userManager.login(loginname, loginpassword);	// userManager에 login메서드에 (loginname, loginpassword)변수를 전닳
            break; //case 2 종료
         case 3:
            userManager.logout(); //userManager에logout()베서드 실행
            break;	//case 3 종료
         case 4:	
            System.out.println("새로운 비밀번호 입력 : ");
            String newPassword = sc.nextLine(); 		//newPassword 변수에 입력값 전달
            userManager.updateUser(newPassword);
            break;	//case 4 종료
         case 5:
            System.out.println("프로그램 종료");
            return; //반환값없이 메인 메서드 종료
         default: //choice에 값이 어떠한 값도 일치하지 않을때 
            System.out.println("번호를 다시 입력하세요");
            break;
         } //switch 끝
//      } catch(NumberFormatException e) { // 정수가 아닌 값을 넣었을떄 예외처리
//         System.out.println("잘못된 입력입니다. 숫자를 입력하세요");
      }catch (InputMismatchException e) { //
         System.out.println("잘못된 입력입니다. 숫자를 입력하세요");
         sc.nextLine(); //
      }catch (Exception e) { //모든 예외처리
         System.out.println("오류가 발생했습니다" + e.getMessage());
      }
      } //while 끝
   }
}
