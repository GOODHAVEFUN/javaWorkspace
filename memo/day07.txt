day07
5일차 과제 풀이 -> 복습 -> 생성자 -> this, this() -> static

0. 복습
클래스
	1. 사용자 정의 타입이다
	2. 연관성 있는 저장공간과 기능을 한곳에 모아 편하게 관리할 수 있는 것
	3. 객체를 생성하기 위한 틀, 설계도

객체, 인스턴스
	
클래스	
	class 클래스명 {
		멤버
		필드;
		메소드(){}

객체화 작업
	클래스명 참조변수 = new 생성자;

객체 사용방법
	객체명.필드명;
	객체명.메소드명();

생성자
	1. 객체 생성 시 실행되는 코드가 작성되어 있다
	2. 목적은 해당 클래스의 필드 초기화!!

this
	객체 자기자신을 의미한다 -> 객체 자신의 주소값을 담고있다
	this는 자동생성되는 변수이다

this()
	자기 자신의 생성자
	생성자 내부에서만 사용가능하며 최상단에 작성해야한다
	-> 생성자 내부에서 나의 다른 생성자를 호출할 때 사용한다

static(정적인) 키워드 => method 영역에 할당된다
	멤버 변수의 종류
		static 붙은 변수 : static 변수, 클래스변수, 정적 변수
		static 안붙은 변수 : 인스턴스 변수

	멤버 메소드의 종류
		static 붙은 메소드 : static 메소드, 클래스메소드, 정적 메소드
		Static 안붙은 메소드 : 인스턴스 메소드

	1. static 변수, static 메소드는 객체를 생성하지 않아도 사용할 수 있다
	2. static 변수는 객체와 상관없이 하나의 저장공간이므로 모든 객체가 공유해서 사용한다
	   즉, 모든 객체에서 공통으로 사용되는 변수 static을 붙이는 것을 고려한다
	3. static 메소드는 인스턴스 멤버를 사용할 수 없다
	   static 메소드가 메모리에서 사용준비가 끝나도 인스턴스 멤버는 new를 사용하여 
	   객체를 생성하기 전까지 사용할 수 없기 때문이다
	4. 클래스명.변수명으로 사용한다

변수의 종류
	1. 지역변수(local Variable)
		클래스 중괄호 영역은 포함되지 않으며, 메소드 또는 그안의 중괄호에서 선언된 변수
	2. 매개변수(parameter)
		메소드의 소괄호안에서 선언된 변수
	3. 인스턴스변수(instance variable)
		클래스 중괄호 영역에서 선언된 변수
	4. 정적변수, 클래스변수 : 객체간 공유, 편의성

메소드
	Arrays.toString()
		매개변수로 배열을 가리키는 변수를 넘겨주면 배열에 저장된 값을 
		문자열로 묶어서 반환해주는 메소드
	
	문자열.lenght()
		문자열의 길이를 반환하는 메소드
	
	문자열.substring(begin, end)
		문자열을 인덱스 번호로 잘라주는 메소드
		begin 인덱스는 어디서부터 자를지 결정
		end	인덱스는 어디까지 자를지 결정(end인덱스의 문자는 포함되지 않는다)

	문자열.split()
		매개변수로 넘겨준 문자열을 기준으로 기존의 문자열을 분리하여 문자열 배열로 반환하는 메소드

