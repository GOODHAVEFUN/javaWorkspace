day15
복습문제 -> 컬렉션 프레임워크(list, set, map)

1. 알고리즘과 자료구조
	사전에서 단어찾기
	java => a~z 사전의 첫페이지부터 끝까지 찾는 방법
		j 사전은 알파벳순서대로 정렬되어있음을 알고 찾는 방법

	알고리즘	어떤 문제가 발생되었을 때 해결할 수 있는 순서 혹은 절차
	자료구조	의미없는 데이터를 하나의 정보로 만들어주는 알고리즘의 집합
		수집한 자료를 저장하는 방법

2. 컬렉션 프레임워크(Collection Framework) : 자료구조
	많은 데이터를 쉽고 효과적으로 관리 할 수 있는 표준화된 방법을 제공하는 클래스들의 집합
	List
	Set
	Map

1. List 인터페이스 extends Collection
	데이터의 순서를 보장한다
	중복된 값을 허용한다


	List 구현 클래스
		Vector : 용량관리, 보안성강화, 처리량감소
		LinkedList : 추가, 삭제는 빠르지만 검색(탐색)이 상대적으로 느리다
		ArrayList : 배열과 동일하게 인덱스로 데이터를 관리한다
			추가, 삭제는 상대적으로 느리지만 검색(탐색)이 빠르다


	<E> : Element 제네릭
		타입 안정성을 보장하기 위한 기능
		결정되지 않은 타입을 파라미터(매개변수)로 처리하고 실제 사용할 때 파라미터(매개변수)를 
		구체적인 타입으로 대체시키는 기능

	제네릭을 사용하는 이유
		1) 제네릭을 사용하지 않는다면 필드의 타입별로 클래스를 만들어야한다
		2) 제네릭 대신 Object 타입을 사용한다면 다운캐스팅을 해야한다
		3) 제네릭은 타입을 제한할 수 있다(Object 타입은 모든 타입을 다 받는다)
	
배열과 ArrayList의 차이
	배열은 길이에 제한을 두어야할 때 자주 사용되고
	ArrayList는 몇개의 데이터 들어올지 알 수 없을 때 사용된다

ArrayList 메소드
	add() 	: 추가
	get(i)	: index 번호로 특정 값 가져오기
	remove(i) : 삭제(index) 삭제, int 타입으로 넘겨줘야함
			삭제한 요소를 반환
	remove(Integer.valueOf(값)) : 값으로 검색하여 삭제, Object 타입으로 넘겨줘야함
	clear()	: 전체삭제
	contains() : 포함여부 검사, 리스트에 존재하면 true, 없으면 false 반환함
	indexOf(값) : 값으로 인덱스 가져오기, 해당 값의 인덱스 번호를 반환함
	set(i, 수정할 값) : 수정, 수정할 인덱스 값을 넘겨주어 수정한다
		수정되기 전의 값을 반환한다
		
자바 컬렉션 프레임 워크 API의 상속관계도		

	iterable(interface)
	Collection(interface)
		|
	---------------------------------
	|		|	 	|
  	List		Set		Map
	ArrayList		HashSet		HashMap
	ListedList		TreeSet		HashTable
	Vector				TreeMap

2. Set : 집합
	데이터의 순서를 보장하지 않는다
	데이터의 중복을 허용하지 않는다

	구현클래스
	HashSet
		Set 인터페이스를 구현한 가장 대표적인 클래스
		중복되는 값을 저장하면 무시한다
		인덱스가 존재하지 않아 순서를 보장하지 않으며 ArrayList나 배열처럼 값을 가져오는 것이 불가능하다
		HashCode()가 반환하는 해시코드를 이용해서 데이터를 처리하며 속도가 상대적으로 빠르다
		위의 특징 때문에 값의 존재여부를 파악할 때 사용하기 좋다

Iterator
	컬렉션에 저장된 데이터들을 컬렉션의 종류와 상관없이 동일한 방식으로 가져오기 위한 인터페이스(타입)
	어떤 자료구조든 Iterator로 변환하면 Iterator만의 방식으로 순서를 만들고 값을 가져올 수 있다
	값의 유무를 검사하거나 값을 가져올 때는 커서를 이용한다

	iterator()
		ArrayList, HashSet 등의 컬렉션 객체를  Iterator 타입으로 변환할 때 사용하는 메소드

	hasNext()
		다음값의 유무를 검사하여 boolean 타입으로 반환한다
	
	next()
		다음 값을 가져온다. 아무 값도 없다면 예외가 발생한다
		NoSuchElementException

HashSet 주의사항
	hashCode()를 사용하는 HashSet에 객체를 저장할 때
	equals()를 재정의했다면 hashCode()도 재정의 해줘야한다






















